'''
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.
'''
class ListNode:
    def __init__(self, val = 0, next = None):
        self.val = val 
        self.next = next
        
class Solution:
    def AddTwoNumbers(self, l1, l2):
        count = 0
        ret = ListNode()
        tmp = ret
        while l1 or l2 or count:
            num = 0
            if l1:
                num += l1.val
                l1 = l1.next
            if l2:
                num += l2.val
                l2 = l2.next
            if count:
                num += count
                count, num = divmod(num, 10)
                tmp.next = ListNode(num)
                tmp = tmp.next
            return ret.next
